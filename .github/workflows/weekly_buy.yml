# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: '0 1 * * 1' # UST  1:00(월) > KST 10:00(월)
    - cron: '0 1 * * 3' # UST  1:00(수) > KST 10:00(수)  
    - cron: '0 1 * * 5' # UST  1:00(금) > KST 10:00(금)

permissions:
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install python package
      run: |        
        pip install selenium
        pip install requests        
        pip install twython
        pip install pillow    
        pip install gspread        
        pip install --upgrade google-api-python-client oauth2client
        pip install playwright
        python -m playwright install ${{ matrix.browser-channel }} --with-deps
    
    - name: Install ubuntu package
      run: |        
        sudo apt-get install fonts-unfonts-core
        sudo apt-get install fonts-unfonts-extra
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add        
        sudo apt-get install google-chrome-stable    
        wget https://chromedriver.storage.googleapis.com/100.0.4896.20/chromedriver_linux64.zip
        unzip ./chromedriver_linux64.zip           

    - run: mkdir -p ./lotto
    
    - name: Restore Cache
      id: cache-restore
      uses: actions/cache/restore@v3
      with:
        path: ./lotto
        key: auto_buy_lotto

    - name: Run Script      
      run: |
        # if [ "$(date '+%u')" -eq 1 ]; then
        #   python crawling_lotto.py
        # elif [ "$(date '+%u')" -eq 3 ]; then
        #   python ./buy_lotto.py ${{secrets.USER_ID}} ${{secrets.USER_PW}} "auto"
        # elif [ "$(date '+%u')" -eq 5 ]; then
        #   python ./buy_lotto.py ${{secrets.USER_ID_2}} ${{secrets.USER_PW_2}} "auto"
        # fi
        
        python crawling_lotto.py
        # echo "1085" > ./lotto/count.log
        # echo "151;142;147;146;140;141;145;140;116;145;147;157;153;155;145;142;154;162;144;151;145;129;133;146;136;145;157;131;135;132;145;129;152;164;142;146;149;146;150;150;134;140;150;144;157;" >> ./lotto/count.log
        # echo "30;29;26;30;22;31;26;20;24;27;23;25;26;21;23;26;30;18;20;25;22;14;18;28;18;29;28;21;14;30;26;29;29;21;28;23;21;28;24;20;15;23;35;22;17;" >> ./lotto/count.log

    - name: Delete Previous Cache
      if: ${{ steps.cache-restore.outputs.cache-hit }}
      continue-on-error: true
      run: |
        gh extension install actions/gh-actions-cache
        gh actions-cache delete "auto_buy_lotto" --confirm
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Save Cache
      uses: actions/cache/save@v3
      with:
        path: ./lotto
        key: auto_buy_lotto
